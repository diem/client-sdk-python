version: 2.1

executors:
  build-executor:
    docker:
      - image: circleci/rust:buster
    resource_class: 2xlarge

commands:
  set-nightly-cargo-config:
    steps:
      - run:
          name: checkout nightly
          command: |
            git clone https://github.com/libra/libra.git
            CWD=`pwd`
            mkdir .cargo
            echo 'paths = [' >> .cargo/config
            echo "\"${CWD}/libra/types\"," >> .cargo/config
            echo "\"${CWD}/libra/crypto/crypto\"," >> .cargo/config
            echo "\"${CWD}/libra/language/transaction-builder\"," >> .cargo/config
            echo "\"${CWD}/libra/common/lcs\"," >> .cargo/config
            echo "\"${CWD}/libra/client/libra_wallet\"," >> .cargo/config
            echo "\"${CWD}/libra/admission_control/admission-control-proto\"," >> .cargo/config
            echo "\"${CWD}/libra/config\"," >> .cargo/config
            echo "\"${CWD}/libra/common/crash-handler\"," >> .cargo/config
            echo "\"${CWD}/libra/common/logger\"," >> .cargo/config
            echo "\"${CWD}/libra/common/metrics\"," >> .cargo/config
            echo "\"${CWD}/libra/common/tools\"," >> .cargo/config
            echo "\"${CWD}/libra/libra-swarm\"," >> .cargo/config
            echo "\"${CWD}/libra/libra-node\"," >> .cargo/config
            echo "\"${CWD}/libra/config/generate-keypair\"," >> .cargo/config
            echo "\"${CWD}/libra/language/compiler\"," >> .cargo/config
            echo ']' >> .cargo/config
  build:
    steps:
      - run:
          name: Setup
          command: |
            sudo apt-get update && sudo apt-get upgrade -y
            sudo apt-get install cmake python3-dev python3-venv clang llvm libjemalloc-dev librocksdb-dev
            cargo install bindgen
            rustup component add clippy-preview
      - run:
          name: Build libra-dev
          command: |
            ./build.sh
      - run:
          name: Install libra-dev
          command: |
            sudo cp libra-dev/target/debug/liblibra_dev.so /usr/lib
      - run:
          name: Test C++ client
          shell: /bin/sh
          command: |
            cd cpp
            ./build.sh && ./test.sh
      - run:
          name: Test Rust Client
          shell: /bin/sh
          command: |
            cd rust
            ./test.sh
  build-python:
    steps:
      - run:
          name: Setup
          command: |
            sudo apt-get update && sudo apt-get upgrade -y
            sudo apt-get install cmake python3-dev python3-venv clang llvm libjemalloc-dev librocksdb-dev
      - run:
          name: Test Python stuff
          shell: /bin/sh
          command: |
            cd python
            ./build.sh
            ./test.sh

jobs:
  build-testnet:
    executor: build-executor
    steps:
      - checkout
      - build
  build-master:
    executor: build-executor
    steps:
      - checkout
      - set-nightly-cargo-config
      - build
  build-python-testnet:
    executor: build-executor
    steps:
      - checkout
      - build-python
  build-python-master:
    executor: build-executor
    steps:
      - checkout
      - set-nightly-cargo-config
      - build-python

workflows:
  version: 2
  build:
    jobs:
      - build-testnet
      - build-python-testnet
  commit-workflow:
    jobs:
      - build-testnet
      - build-python-testnet
      - build-master
      - build-python-master
  nightly:
    triggers:
      - schedule:
          cron: "0 7 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build-master
      - build-python-master
