from pylibra import AccountResource

# to generate this, run cli, do "q as 000000000000000000000000000000000000000000000000"
BLOB = bytes.fromhex(
    "a07ffc5e1799c00f3ac9fa7bbf1db75a25aaf4d0ac1e104f3f16a5445cd9c571ff0000000000000002000000b80000004c49425241564d0a010007014a00000004000000034e000000060000000d54000000060000000e5a0000000600000005600000002900000004890000002000000008a90000000f00000000000001000200010300020002040200030204020300063c53454c463e0c4c696272614163636f756e74046d61696e0f7061795f66726f6d5f73656e6465720000000000000000000000000000000000000000000000000000000000000000000100020004000c000c0113010102020000000100000000000000000000000000000000000000000000000000000000000000000000000000000040420f0000000000e02202000000000000000000000000002c0100000000000020000000d04ab232742bb4ab3a1368bd4615e4e6d0224ab71a016baf8520a332c977873740000000663685df054939b729ed8d0a95feb8210257449bf714661b762226fb8b80798c9f98c1ed42c43c0af63a9697d24e06891eab78375f42bc9740faeab6b0960d04"
)


def test_account_state_blob():
    return

    ar = AccountResource.create(BLOB)
    assert ar.balance == 100000000000
    assert ar.sequence == 1
    assert (
        ar.authentication_key
        == b"6\xcc\xb9\xba\x8bO\x0c\xd1\xf3\xe2\xd9\x938\x80h\x93\xdf\xf7G\x8ci\xac\xee\x9b\x8e\x12G\xc0Sx:H"
    )
    assert ar.delegated_key_rotation_capability is False
    assert ar.delegated_withdrawal_capability is False
    assert ar.sent_events.count == 1
    assert (
        ar.sent_events.key == b"2\xf5ow\xb0\x97s\xaad\xc7\x8e\xe3\x99C\xda~\xc7?\x91\xcdu~2P\x98\xe1\x1b>\xdcN\xcc\xb1"
    )
    assert ar.received_events.count == 2
    assert (
        ar.received_events.key
        == b"\x0b\x14\xedOZ\xf8\xf8\xf0w\xc7\xecC\x13\xc6\xd3\x95\xb9\xa7\xeb_A\xea\xb9\xec\x156r\x15\xca\x9eB\n"
    )
